name: Build & maybe upload PyPI package
'on':
  push:
    tags:
    - '*'
  pull_request:
    branches:
    - main
  release:
    types:
    - published
  workflow_dispatch: null
permissions:
  contents: read
  id-token: write
jobs:
  build-package:
    name: Build & verify package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version:
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'
    steps:
    - name: checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Clean dist dir
      run: |
        if [ -d dist ]; then
          rm -rf dist/*
        fi
      shell: bash
    - name: Build wheels with maturin
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release --out dist --sdist --verbose --interpreter python${{ matrix.python-version }}
    - name: Upload built packages
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist
  release-test-pypi:
    name: Publish in-dev package to test.pypi.org
    environment: release-test-pypi
    if: github.repository_owner == 'second-ed' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-package
    steps:
    - name: Download packages built by build-and-inspect-python-package
      uses: actions/download-artifact@v4
      with:
        pattern: wheel-*
        path: dist
        merge-multiple: true
    - name: Upload package to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
  release-pypi:
    name: Publish released package to pypi.org
    environment: release-pypi
    if: github.repository_owner == 'second-ed' && github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: build-package
    steps:
    - name: Download packages built by build-and-inspect-python-package
      uses: actions/download-artifact@v4
      with:
        pattern: wheel-*
        path: dist
        merge-multiple: true
    - name: Upload package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
